Address     Code        Basic                        Line Source

0x00400000  0x004000B7  addi x30,x0,1                6        addi   t5, zero, 1           # t5 = constant 1
0x00400004  0x00000013  addi x10,x0,1                7        addi   a0, zero, 1           # t8 = 1: swap performed
0x00400008  0x00000013  beq x10,x0,0x0000004c        10       beq     a0, zero, end         # Verifies if a swap has ocurred
0x0040000c  0x00000013  auipc x5,0x0000fc10          11       la      t0, array              # t0 points the first array element
0x00400010  0x00000013  addi x5,x5,0xfffffff4             
0x00400014  0x03C08267  auipc x31,0x0000fc10         12       la      t6, size               # 
0x00400018  0x00000013  addi x31,x31,8                    
0x0040001c  0x00000013  lw x31,0(x31)                13       lw      t6, 0(t6)             # t6 <- size    
0x00400020  0x00000013  addi x10,x0,0                14       addi   a0, zero, 0           # swap <- 0
0x00400024  0x00000013  lw x6,0(x5)                  17       lw      t1, 0(t0)             # t1 <- array[i]
0x00400028  0x00000013  lw x7,4(x5)                  18       lw      t2, 4(t0)             # t2 <- array[i+1]
0x0040002c  0x00000013  slt x11,x7,x6                19       slt     a1, t2, t1           # array[i+1] < array[i] ?
0x00400030  0x00000013  beq x11,x30,0x00000014       20       beq     a1, t5, swap          # Branch if array[i+1] < array[i]
0x00400034  0x00000013  addi x5,x5,4                 23       addi   t0, t0, 4             # t0 points the next element
0x00400038  0x00000013  addi x31,x31,0xffffffff      24       addi   t6, t6, -1            # size--
0x0040003c  0x00000013  beq x31,x30,0xffffffcc       25       beq     t6, t5, while         # Verifies if all elements were compared
0x00400040  0x00000013  jal x0,0xffffffe4            26       j       loop    
0x00400044  0x00000013  sw x6,4(x5)                  30       sw      t1, 4(t0)
0x00400048  0x00000013  sw x7,0(x5)                  31       sw      t2, 0(t0)
0x0040004c  0x00000013  addi x10,x0,1                32       addi   a0, zero, 1           # Indicates a swap
0x00400050  0x00000013  jal x0,0xffffffe4            33       j       continue
0x00400054  0x00000013  jal x0,0x00000000            36       j       end